pipeline {
    agent {
        label 'master'
    }

    options {
        skipStagesAfterUnstable()
        ansiColor('xterm')
        
    }

    stages {
        stage('Clone'){
            steps {
               git branch: 'main', url: 'https://github.com/navaganeshr/eks_cluster.git'
            }
        }
        
        stage('Plan') {
            steps {
                script{    
                withAWS(credentials: 'aws-dev', region: 'us-west-2') {  
                sh " terraform workspace new ${JOB_BASE_NAME} || true"    
                sh " terraform init  "
                sh " terraform workspace select ${JOB_BASE_NAME} "
                sh " terraform plan  -var-file=environment/${JOB_BASE_NAME}.tfvars -input=false -out tfplan "
                sh " terraform show -no-color tfplan > tfplan.txt "
                 }
               }
           }
        }  

        stage('Approval') {
            steps {
                script {
                    def plan = readFile "tfplan.txt"
                    input message: "Do you want to apply the plan?",
                        parameters: [text(name: 'Plan', description: 'Please review the plan', defaultValue: plan)]

                }
            }
        }

        stage('Apply') {
            steps {
                script {
                echo"Applying Terraform Template"    
                sh "terraform apply -input=false tfplan "
              }
            } 
        }
    }  
}